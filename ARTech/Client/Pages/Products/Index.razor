@page "/products/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]


<h3 class="card-title">Products</h3>

<a href="/products/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Product
</a>
<br />
<br />

@if (Products == null)
{
<div class="alert alert-info"> Loading Products...</div>
}
else
{
<table class="table table-responsive">
    <thead>
        <tr>
            <th>Product Id</th>
            <th>Customer Id</th>
            <th>Price</th>
            <th>Warranty</th>
            <th>Quantity</th>
            <th>Specification</th>
            <th>Model</th>
            <th>Brand</th>
            <th>Condition</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Products)
        {
        <tr>
            <td>@product.ProductId</td>
            <td>@product.Customer.CustomerId</td>
            <td>@product.Price</td>
            <td>@product.Warranty</td>
            <td>@product.Qty</td>
            <td>@product.Specs</td>
            <td>@product.Model</td>
            <td>@product.Brand</td>
            <td>@product.Condition</td>

            <td>
                <a href="/orderitems/view/@product.ProductId" class="btn btn-primary">
                    <span class="oi oi-book"></span>
                </a>
                <a href="/orderitems/edit/@product.ProductId" class="btn btn-warning">
                    <span class="oi oi-pencil"></span>
                </a>
                <button class="btn btn-danger" @onclick="@(()=>Delete(product.ProductId))">
                    <span class="oi oi-delete"></span>
                </button>
            </td>
        </tr>
        }
    </tbody>
</table>
}

@code {
    private List<Product> Products;

    protected async override Task OnInitializedAsync()
    {
        Products = await _client.GetFromJsonAsync<List<Product>>($"{Endpoints.ProductsEndpoint}");
    }
    async Task Delete(int productId)
    {
        var product = Products.First(q => q.ProductId == productId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {product.ProductId}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.ProductsEndpoint}/{productId}");
            await OnInitializedAsync();
        }
    }

}