@page "/customers/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]


<h3 class="card-title">Customers</h3>

<a href="/customers/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Customer
</a>
<br />
<br />

@if (Customers == null)
{
    <div class="alert alert-info">Loading Customers...</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Customer Id</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Contact Number</th>
                <th>Email Address</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in Customers)
            {
            <tr>
                <td>@customer.CustomerId </td>
                <td>@customer.FirstName</td>
                <td>@customer.LastName</td>
                <td>@customer.Contact</td>
                <td>@customer.Email</td>
                <td>@customer.Address</td>
                <td>
                    <a href="/customers/view/@customer.CustomerId" class="btn btn-primary">
                        <span class="oi oi-book"></span>
                    </a>
                    <a href="/customers/edit/@customer.CustomerId" class="btn btn-warning">
                        <span class="oi oi-pencil"></span>
                    </a>
                    <button class="btn btn-danger" @onclick="@(()=>Delete(customer.CustomerId))">
                        <span class="oi oi-delete"></span>
                    </button>
                </td>
            </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Customer> Customers;

    protected async override Task OnInitializedAsync()
    {
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");
    }

    async Task Delete(int customerId)
    {
        var customer = Customers.First(q => q.CustomerId == customerId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {customer.CustomerId}?");
        if (confirm)

        {
            await _client.DeleteAsync($"{Endpoints.CustomersEndpoint}/{customerId}");
            await OnInitializedAsync();
        }
    }

}
