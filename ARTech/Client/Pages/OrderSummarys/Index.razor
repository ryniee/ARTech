@page "/ordersummarys/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]


<h3 class="card-title">Order Summarys</h3>

<a href="/ordersummarys/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Order Summary
</a>
<br />
<br />

@if (OrderSummarys == null)
{
    <div class="alert alert-info">Loading OrderSummarys...</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>OrderSummary Id</th>
                <th>Customer Id</th>
                <th>DateTime</th>
                <th>Logistic Id</th>
                <th>Shipping Address</th>
                <th>Staff Id</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ordersummary in OrderSummarys)
            {
            <tr>
                <td>@ordersummary.OrderSummaryId</td>
                <td>@ordersummary.CustomerId</td>
                <td>@ordersummary.DateTime != nullDT ? (ordersummary.DateIn - booking.DateOut).TotalDays.ToString() : "To Be Determined")</td>
                <td>@ordersummary.LogisticId</td>
                <td>@ordersummary.ShippingAddress</td>
                <td>@ordersummary.StaffId</td>
                <td>
                    <a href="/ordersummarys/view/@ordersummary.OrderSummaryId" class="btn btn-primary">
                        <span class="oi oi-book"></span>
                    </a>
                    <a href="/ordersummarys/edit/@ordersummary.OrderSummaryId" class="btn btn-warning">
                        <span class="oi oi-pencil"></span>
                    </a>
                    <button class="btn btn-danger" @onclick="@(()=>Delete(ordersummary.OrderSummaryId))">
                        <span class="oi oi-delete"></span>
                    </button>
                </td>
            </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<OrderSummary> OrderSummarys;

    protected async override Task OnInitializedAsync()
    {
        OrderSummarys = await _client.GetFromJsonAsync<List<OrderSummary>>($"{Endpoints.OrderSummarysEndpoint}");
    }

    async Task Delete(int ordersummaryId)
    {
        var ordersummary = OrderSummarys.First(q => q.OrderSummaryId == ordersummaryId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {ordersummary.OrderSummaryId}?");
        if (confirm)

        {
            await _client.DeleteAsync($"{Endpoints.OrderSummarysEndpoint}/{ordersummaryId}");
            await OnInitializedAsync();
        }
    }

}
